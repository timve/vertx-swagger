package {{rootPackage}};

import com.fasterxml.jackson.datatype.jsr310.JavaTimeModule;

import io.vertx.core.AbstractVerticle;
import io.vertx.core.Future;
import io.vertx.core.json.Json;
import io.vertx.core.logging.Logger;
import io.vertx.core.logging.LoggerFactory;
import io.vertx.ext.web.Router;

{{#apiInfo}}{{#apis}}import {{package}}.{{classname}}Router;
{{/apis}}{{/apiInfo}}

public class MainApiVerticle extends AbstractVerticle {
    private final static Logger LOGGER = LoggerFactory.getLogger(MainApiVerticle.class);
    
    private final Router router = Router.router(vertx);
    
    @Override
    public void start(Future<Void> startFuture) throws Exception {
        Json.mapper.registerModule(new JavaTimeModule());
        {{#apiInfo}}{{#apis}}router.mountSubRouter("/", {{classname}}Router.router(vertx));
        {{/apis}}{{/apiInfo}}
        deployVerticles(startFuture);

        vertx.createHttpServer()
            .requestHandler(router::accept)
            .listen({{serverPort}});

        startFuture.complete();
    }
      
    private void deployVerticles(Future<Void> startFuture) {
        {{#apiInfo}}{{#apis}}
        vertx.deployVerticle("{{apiPackage}}.{{classname}}Verticle", res -> {
            if (res.succeeded()) {
                LOGGER.info("{{classname}}Verticle : Deployed");
            } else {
                startFuture.fail(res.cause());
                LOGGER.error("{{classname}}Verticle : Deployement failed");
            }
        });
        {{/apis}}{{/apiInfo}}
    }
}